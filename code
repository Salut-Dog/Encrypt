
from cryptography.fernet import Fernet

def generate_key():
    """Generate and save a key for encryption and decryption."""
    key = Fernet.generate_key()
    with open('secret.key', 'wb') as key_file:
        key_file.write(key)
    print("Key generated and saved as 'secret.key'.")

def load_key():
    """Load the encryption key from a file."""
    try:
        with open('secret.key', 'rb') as key_file:
            return key_file.read()
    except FileNotFoundError:
        print("Error: 'secret.key' file not found. Generate a key first.")
        return None

def encrypt_message(message):
    """Encrypt a plain text message."""
    key = load_key()
    if key:
        fernet = Fernet(key)
        encrypted_message = fernet.encrypt(message.encode())
        return encrypted_message
    return None

def decrypt_message(encrypted_message):
    """Decrypt an encrypted message."""
    key = load_key()
    if key:
        fernet = Fernet(key)
        try:
            decrypted_message = fernet.decrypt(encrypted_message).decode()
            return decrypted_message
        except Exception as e:
            print("Error: Decryption failed.", e)
    return None

def encrypt_file(filename):
    """Encrypt the contents of a file."""
    key = load_key()
    if key:
        fernet = Fernet(key)
        try:
            with open(filename, 'rb') as file:
                data = file.read()
            encrypted_data = fernet.encrypt(data)
            with open(filename, 'wb') as file:
                file.write(encrypted_data)
            print(f"File '{filename}' encrypted successfully.")
        except FileNotFoundError:
            print(f"Error: File '{filename}' not found.")

def decrypt_file(filename):
    """Decrypt the contents of a file."""
    key = load_key()
    if key:
        fernet = Fernet(key)
        try:
            with open(filename, 'rb') as file:
                encrypted_data = file.read()
            decrypted_data = fernet.decrypt(encrypted_data)
            with open(filename, 'wb') as file:
                file.write(decrypted_data)
            print(f"File '{filename}' decrypted successfully.")
        except FileNotFoundError:
            print(f"Error: File '{filename}' not found.")
        except Exception as e:
            print("Error: Decryption failed.", e)

if __name__ == "__main__":
    print("Encryption/Decryption Tool")
    print("1. Generate Key")
    print("2. Encrypt Message")
    print("3. Decrypt Message")
    print("4. Encrypt File")
    print("5. Decrypt File")
    choice = input("Choose an option: ")

    if choice == "1":
        generate_key()
    elif choice == "2":
        message = input("Enter the message to encrypt: ")
        encrypted = encrypt_message(message)
        if encrypted:
            print("Encrypted message:", encrypted)
    elif choice == "3":
        encrypted_message = input("Enter the encrypted message: ").encode()
        decrypted = decrypt_message(encrypted_message)
        if decrypted:
            print("Decrypted message:", decrypted)
    elif choice == "4":
        filename = input("Enter the file name to encrypt: ")
        encrypt_file(filename)
    elif choice == "5":
        filename = input("Enter the file name to decrypt: ")
        decrypt_file(filename)
    else:
        print("Invalid option.")
